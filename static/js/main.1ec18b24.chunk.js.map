{"version":3,"sources":["components/socialProfile/Profile.module.css","components/statistics/Statistics.module.css","components/friendList/FriendListItem.module.css","components/transactionHistory/TransactionHistory.module.css","components/statistics/StatisticsListItem.module.css","components/friendList/FriendList.module.css","components/transactionHistory/TransactionHistoryRow.module.css","image/no-image.png","components/socialProfile/Profile.js","components/statistics/StatisticsListItem.js","components/statistics/Statistics.js","components/friendList/FriendListItem.js","components/friendList/FriendList.js","components/transactionHistory/TransactionHistoryRow.js","components/transactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","noImage","stats","followers","views","likes","className","styles","container","about__card","about__image","src","alt","about__nameText","about__simpleText","stats__list","stats__listItem","List","styled","li","props","color","StatisticsListItem","label","percentage","Math","round","random","style","listLabel","listValue","Statistics","title","mainTitle","toUpperCase","mainList","map","id","FriendListItem","isOnline","listItem","isOffline","FriendList","friends","list","TransactionHistoryRow","type","amount","currency","index","tableRow","backgroundColor","TransactionHistory","items","table","tableHead","tableBody","App","userData","statsData","friendsData","transactionData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ec18b24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__lB5SZ\",\"about__card\":\"Profile_about__card__2J7au\",\"about__image\":\"Profile_about__image__2E2E6\",\"about__nameText\":\"Profile_about__nameText__1WJ1k\",\"about__simpleText\":\"Profile_about__simpleText__Qu4sA\",\"stats__list\":\"Profile_stats__list__2KU5A\",\"stats__listItem\":\"Profile_stats__listItem__2rvbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__1uNpc\",\"mainTitle\":\"Statistics_mainTitle__304e9\",\"mainList\":\"Statistics_mainList__yMXhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"FriendListItem_listItem__2IEEC\",\"isOnline\":\"FriendListItem_isOnline__9Byuq\",\"isOffline\":\"FriendListItem_isOffline__19Ywl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__1i2U6\",\"tableHead\":\"TransactionHistory_tableHead__2pkPH\",\"tableBody\":\"TransactionHistory_tableBody__3zb7R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listLabel\":\"StatisticsListItem_listLabel__2Mk0c\",\"listValue\":\"StatisticsListItem_listValue__wFa7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__28T_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"TransactionHistoryRow_tableRow__1rb1y\"};","export default __webpack_public_path__ + \"static/media/no-image.8cc1c33d.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport noImage from \"../../image/no-image.png\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ name, tag, location, avatar = noImage, stats: { followers, views, likes } }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.about__card}>\r\n        <img className={styles.about__image} src={avatar} alt={name} />\r\n        <p className={styles.about__nameText}>{name}</p>\r\n        <p className={styles.about__simpleText}>@{tag}</p>\r\n        <p className={styles.about__simpleText}>{location}</p>\r\n      </div>\r\n      <ul className={styles.stats__list}>\r\n        <li className={styles.stats__listItem}>\r\n          <span>Followers</span>\r\n          <br />\r\n          <span>{followers}</span>\r\n        </li>\r\n        <li className={styles.stats__listItem}>\r\n          <span>Views</span>\r\n          <br />\r\n          <span>{views}</span>\r\n        </li>\r\n        <li className={styles.stats__listItem}>\r\n          <span>Likes</span>\r\n          <br />\r\n          <span>{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\n\r\n// Дефолтный проп установлен при деструктуризации.\r\n// Profile.defaultProps = {\r\n//     avatar: noImage\r\n// }\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./StatisticsListItem.module.css\";\r\nimport styled from \"styled-components\";\r\n\r\nconst List = styled.li`\r\n  background-color: ${props => props.color};\r\n  color: bisque;\r\n  padding: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst StatisticsListItem = ({ label, percentage }) => {\r\n  const randomColor = () => {\r\n    return `rgb(${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)})`;\r\n  };\r\n\r\n  return (\r\n    <List color={randomColor()}>\r\n      <span className={style.listLabel}>{label}</span>\r\n      <span className={style.listValue}>{percentage}%</span>\r\n    </List>\r\n  );\r\n};\r\n\r\nStatisticsListItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default StatisticsListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatisticsListItem from \"./StatisticsListItem\";\r\nimport style from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={style.container}>\r\n      {title && <h2 className={style.mainTitle}>{title.toUpperCase()}</h2>}\r\n      <ul className={style.mainList}>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <StatisticsListItem key={id} label={label} percentage={percentage} />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport noImage from \"../../image/no-image.png\";\r\nimport styles from \"./FriendListItem.module.css\";\r\n\r\nconst FriendListItem = ({ avatar = noImage, name, isOnline }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <span className={isOnline ? styles.isOnline : styles.isOffline}></span>\r\n      <img src={avatar} alt={name} />\r\n      <p>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport FriendListItem from \"./FriendListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FriendList.module.css\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {friends.map(({ avatar, name, isOnline, id }) => (\r\n        <FriendListItem key={id} avatar={avatar} name={name} isOnline={isOnline} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired\r\n    }).isRequired\r\n  ).isRequired\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistoryRow.module.css\";\r\n\r\nconst TransactionHistoryRow = ({ type, amount, currency, index }) => {\r\n  return (\r\n    <tr className={styles.tableRow} style={index % 2 ? { backgroundColor: \"lightgray\" } : {}}>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactionHistoryRow.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TransactionHistoryRow;\r\n","import React from \"react\";\r\nimport TransactionHistoryRow from \"./TransactionHistoryRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.table}>\r\n      <thead className={styles.tableHead}>\r\n        <tr>\r\n          <th>TYPE</th>\r\n          <th>AMOUNT</th>\r\n          <th>CURRENCY</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className={styles.tableBody}>\r\n        {items.map(({ id, type, amount, currency }, index) => (\r\n          <TransactionHistoryRow key={id} type={type} amount={amount} currency={currency} index={index} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\nimport Profile from \"./socialProfile/Profile\";\r\nimport userData from \"../data/user.json\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport statsData from \"../data/statistical-data.json\";\r\nimport FriendList from \"./friendList/FriendList\";\r\nimport friendsData from \"../data/friends.json\";\r\nimport TransactionHistory from \"./transactionHistory/TransactionHistory\";\r\nimport transactionData from \"../data/transactions.json\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h2>---------------------------- Задание 1 ----------------------------</h2>\r\n      <Profile\r\n        name={userData.name}\r\n        tag={userData.tag}\r\n        location={userData.location}\r\n        avatar={userData.avatar}\r\n        stats={userData.stats}\r\n      />\r\n      <h2>---------------------------- Задание 2 ----------------------------</h2>\r\n      <Statistics title=\"Upload stats\" stats={statsData} />\r\n      <Statistics stats={statsData} />\r\n      <h2>---------------------------- Задание 3 ----------------------------</h2>\r\n      <FriendList friends={friendsData} />\r\n      <h2>---------------------------- Задание 4 ----------------------------</h2>\r\n      <TransactionHistory items={transactionData} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}